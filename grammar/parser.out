Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    newline
    space
    tab

Grammar

Rule 0     S' -> command
Rule 1     command -> roll_list
Rule 2     command -> mod_list
Rule 3     command -> <empty>
Rule 4     roll_list -> roll
Rule 5     roll_list -> roll roll_list
Rule 6     roll -> number dice mod_list
Rule 7     roll -> number dice
Rule 8     roll -> dice mod_list
Rule 9     roll -> dice
Rule 10    mod_list -> mod
Rule 11    mod_list -> mod mod_list
Rule 12    mod -> plus number
Rule 13    mod -> minus number
Rule 14    mod -> star number
Rule 15    mod -> div number
Rule 16    mod -> adv
Rule 17    mod -> disadv

Terminals, with rules where they appear

adv                  : 16
dice                 : 6 7 8 9
disadv               : 17
div                  : 15
error                : 
minus                : 13
newline              : 
number               : 6 7 12 13 14 15
plus                 : 12
space                : 
star                 : 14
tab                  : 

Nonterminals, with rules where they appear

command              : 0
mod                  : 10 11
mod_list             : 2 6 8 11
roll                 : 4 5
roll_list            : 1 5

Parsing method: LALR

state 0

    (0) S' -> . command
    (1) command -> . roll_list
    (2) command -> . mod_list
    (3) command -> .
    (4) roll_list -> . roll
    (5) roll_list -> . roll roll_list
    (10) mod_list -> . mod
    (11) mod_list -> . mod mod_list
    (6) roll -> . number dice mod_list
    (7) roll -> . number dice
    (8) roll -> . dice mod_list
    (9) roll -> . dice
    (12) mod -> . plus number
    (13) mod -> . minus number
    (14) mod -> . star number
    (15) mod -> . div number
    (16) mod -> . adv
    (17) mod -> . disadv

    $end            reduce using rule 3 (command -> .)
    number          shift and go to state 6
    dice            shift and go to state 7
    plus            shift and go to state 8
    minus           shift and go to state 9
    star            shift and go to state 10
    div             shift and go to state 11
    adv             shift and go to state 12
    disadv          shift and go to state 13

    command                        shift and go to state 1
    roll_list                      shift and go to state 2
    mod_list                       shift and go to state 3
    roll                           shift and go to state 4
    mod                            shift and go to state 5

state 1

    (0) S' -> command .



state 2

    (1) command -> roll_list .

    $end            reduce using rule 1 (command -> roll_list .)


state 3

    (2) command -> mod_list .

    $end            reduce using rule 2 (command -> mod_list .)


state 4

    (4) roll_list -> roll .
    (5) roll_list -> roll . roll_list
    (4) roll_list -> . roll
    (5) roll_list -> . roll roll_list
    (6) roll -> . number dice mod_list
    (7) roll -> . number dice
    (8) roll -> . dice mod_list
    (9) roll -> . dice

    $end            reduce using rule 4 (roll_list -> roll .)
    number          shift and go to state 6
    dice            shift and go to state 7

    roll                           shift and go to state 4
    roll_list                      shift and go to state 14

state 5

    (10) mod_list -> mod .
    (11) mod_list -> mod . mod_list
    (10) mod_list -> . mod
    (11) mod_list -> . mod mod_list
    (12) mod -> . plus number
    (13) mod -> . minus number
    (14) mod -> . star number
    (15) mod -> . div number
    (16) mod -> . adv
    (17) mod -> . disadv

    $end            reduce using rule 10 (mod_list -> mod .)
    number          reduce using rule 10 (mod_list -> mod .)
    dice            reduce using rule 10 (mod_list -> mod .)
    plus            shift and go to state 8
    minus           shift and go to state 9
    star            shift and go to state 10
    div             shift and go to state 11
    adv             shift and go to state 12
    disadv          shift and go to state 13

    mod                            shift and go to state 5
    mod_list                       shift and go to state 15

state 6

    (6) roll -> number . dice mod_list
    (7) roll -> number . dice

    dice            shift and go to state 16


state 7

    (8) roll -> dice . mod_list
    (9) roll -> dice .
    (10) mod_list -> . mod
    (11) mod_list -> . mod mod_list
    (12) mod -> . plus number
    (13) mod -> . minus number
    (14) mod -> . star number
    (15) mod -> . div number
    (16) mod -> . adv
    (17) mod -> . disadv

    number          reduce using rule 9 (roll -> dice .)
    dice            reduce using rule 9 (roll -> dice .)
    $end            reduce using rule 9 (roll -> dice .)
    plus            shift and go to state 8
    minus           shift and go to state 9
    star            shift and go to state 10
    div             shift and go to state 11
    adv             shift and go to state 12
    disadv          shift and go to state 13

    mod_list                       shift and go to state 17
    mod                            shift and go to state 5

state 8

    (12) mod -> plus . number

    number          shift and go to state 18


state 9

    (13) mod -> minus . number

    number          shift and go to state 19


state 10

    (14) mod -> star . number

    number          shift and go to state 20


state 11

    (15) mod -> div . number

    number          shift and go to state 21


state 12

    (16) mod -> adv .

    plus            reduce using rule 16 (mod -> adv .)
    minus           reduce using rule 16 (mod -> adv .)
    star            reduce using rule 16 (mod -> adv .)
    div             reduce using rule 16 (mod -> adv .)
    adv             reduce using rule 16 (mod -> adv .)
    disadv          reduce using rule 16 (mod -> adv .)
    $end            reduce using rule 16 (mod -> adv .)
    number          reduce using rule 16 (mod -> adv .)
    dice            reduce using rule 16 (mod -> adv .)


state 13

    (17) mod -> disadv .

    plus            reduce using rule 17 (mod -> disadv .)
    minus           reduce using rule 17 (mod -> disadv .)
    star            reduce using rule 17 (mod -> disadv .)
    div             reduce using rule 17 (mod -> disadv .)
    adv             reduce using rule 17 (mod -> disadv .)
    disadv          reduce using rule 17 (mod -> disadv .)
    $end            reduce using rule 17 (mod -> disadv .)
    number          reduce using rule 17 (mod -> disadv .)
    dice            reduce using rule 17 (mod -> disadv .)


state 14

    (5) roll_list -> roll roll_list .

    $end            reduce using rule 5 (roll_list -> roll roll_list .)


state 15

    (11) mod_list -> mod mod_list .

    $end            reduce using rule 11 (mod_list -> mod mod_list .)
    number          reduce using rule 11 (mod_list -> mod mod_list .)
    dice            reduce using rule 11 (mod_list -> mod mod_list .)


state 16

    (6) roll -> number dice . mod_list
    (7) roll -> number dice .
    (10) mod_list -> . mod
    (11) mod_list -> . mod mod_list
    (12) mod -> . plus number
    (13) mod -> . minus number
    (14) mod -> . star number
    (15) mod -> . div number
    (16) mod -> . adv
    (17) mod -> . disadv

    number          reduce using rule 7 (roll -> number dice .)
    dice            reduce using rule 7 (roll -> number dice .)
    $end            reduce using rule 7 (roll -> number dice .)
    plus            shift and go to state 8
    minus           shift and go to state 9
    star            shift and go to state 10
    div             shift and go to state 11
    adv             shift and go to state 12
    disadv          shift and go to state 13

    mod_list                       shift and go to state 22
    mod                            shift and go to state 5

state 17

    (8) roll -> dice mod_list .

    number          reduce using rule 8 (roll -> dice mod_list .)
    dice            reduce using rule 8 (roll -> dice mod_list .)
    $end            reduce using rule 8 (roll -> dice mod_list .)


state 18

    (12) mod -> plus number .

    plus            reduce using rule 12 (mod -> plus number .)
    minus           reduce using rule 12 (mod -> plus number .)
    star            reduce using rule 12 (mod -> plus number .)
    div             reduce using rule 12 (mod -> plus number .)
    adv             reduce using rule 12 (mod -> plus number .)
    disadv          reduce using rule 12 (mod -> plus number .)
    $end            reduce using rule 12 (mod -> plus number .)
    number          reduce using rule 12 (mod -> plus number .)
    dice            reduce using rule 12 (mod -> plus number .)


state 19

    (13) mod -> minus number .

    plus            reduce using rule 13 (mod -> minus number .)
    minus           reduce using rule 13 (mod -> minus number .)
    star            reduce using rule 13 (mod -> minus number .)
    div             reduce using rule 13 (mod -> minus number .)
    adv             reduce using rule 13 (mod -> minus number .)
    disadv          reduce using rule 13 (mod -> minus number .)
    $end            reduce using rule 13 (mod -> minus number .)
    number          reduce using rule 13 (mod -> minus number .)
    dice            reduce using rule 13 (mod -> minus number .)


state 20

    (14) mod -> star number .

    plus            reduce using rule 14 (mod -> star number .)
    minus           reduce using rule 14 (mod -> star number .)
    star            reduce using rule 14 (mod -> star number .)
    div             reduce using rule 14 (mod -> star number .)
    adv             reduce using rule 14 (mod -> star number .)
    disadv          reduce using rule 14 (mod -> star number .)
    $end            reduce using rule 14 (mod -> star number .)
    number          reduce using rule 14 (mod -> star number .)
    dice            reduce using rule 14 (mod -> star number .)


state 21

    (15) mod -> div number .

    plus            reduce using rule 15 (mod -> div number .)
    minus           reduce using rule 15 (mod -> div number .)
    star            reduce using rule 15 (mod -> div number .)
    div             reduce using rule 15 (mod -> div number .)
    adv             reduce using rule 15 (mod -> div number .)
    disadv          reduce using rule 15 (mod -> div number .)
    $end            reduce using rule 15 (mod -> div number .)
    number          reduce using rule 15 (mod -> div number .)
    dice            reduce using rule 15 (mod -> div number .)


state 22

    (6) roll -> number dice mod_list .

    number          reduce using rule 6 (roll -> number dice mod_list .)
    dice            reduce using rule 6 (roll -> number dice mod_list .)
    $end            reduce using rule 6 (roll -> number dice mod_list .)

